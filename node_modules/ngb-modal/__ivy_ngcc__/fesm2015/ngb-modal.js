import { Injectable, ComponentFactoryResolver, Component, Input, Output, EventEmitter, ViewChild, NgModule, defineInjectable, inject } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["modalRoot"];
function ModalComponent_div_3_h4_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h4", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.settings == null ? null : ctx_r2.settings.title);
} }
function ModalComponent_div_3_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function ModalComponent_div_3_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.close(); });
    ɵngcc0.ɵɵelementStart(1, "span", 12);
    ɵngcc0.ɵɵtext(2, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("aria-label", (ctx_r3.settings == null ? null : ctx_r3.settings.cancelButtonLabel) || "Close");
} }
function ModalComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵtemplate(2, ModalComponent_div_3_h4_2_Template, 2, 1, "h4", 6);
    ɵngcc0.ɵɵprojection(3);
    ɵngcc0.ɵɵtemplate(4, ModalComponent_div_3_button_4_Template, 3, 1, "button", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 8);
    ɵngcc0.ɵɵprojection(6, 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 9);
    ɵngcc0.ɵɵprojection(8, 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.settings == null ? null : ctx_r1.settings.title);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r1.settings == null ? null : ctx_r1.settings.hideCloseButton));
} }
const _c1 = [[["modal-header"]], [["modal-content"]], [["modal-footer"]]];
const _c2 = function (a0) { return { display: a0 }; };
const _c3 = function (a0) { return { "fade": a0 }; };
const _c4 = function (a0) { return { "modal-dialog-centered": a0 }; };
const _c5 = ["modal-header", "modal-content", "modal-footer"];
const _c6 = ["*"];
class ModalManager {
    /**
     * @param {?} componentFactoryResolver
     */
    constructor(componentFactoryResolver) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.globalConfig = {
            size: "md",
            modalClass: '',
            hideCloseButton: false,
            centered: false,
            backdrop: true,
            animation: true,
            keyboard: true,
            closeOnOutsideClick: true,
            backdropClass: "modal-backdrop"
        };
    }
    /**
     * @param {?} config
     * @return {?}
     */
    set defaults(config) {
        this.globalConfig = Object.assign(this.globalConfig, config);
    }
    /**
     * @param {?} config
     * @return {?}
     */
    setDefaults(config) {
        this.globalConfig = Object.assign(this.globalConfig, config);
    }
    /**
     * @return {?}
     */
    get defaults() {
        return this.globalConfig;
    }
    /**
     * @param {?} ref
     * @return {?}
     */
    setRootViewContainerRef(ref) {
        this.modalHost = ref;
    }
    /**
     * @param {?} modalInstance
     * @param {?=} settings
     * @return {?}
     */
    open(modalInstance, settings) {
        /** @type {?} */
        let config = settings || {};
        if (typeof modalInstance === "object") {
            modalInstance.init(config);
            modalInstance.open();
            return modalInstance;
        }
        else if (typeof modalInstance === "function") {
            /** @type {?} */
            let componentFactory = this.componentFactoryResolver.resolveComponentFactory(modalInstance);
            this.modalHost.remove();
            /** @type {?} */
            let componentRef = this.modalHost.createComponent(componentFactory);
            componentRef.instance['ModalComponent'].init(config);
            componentRef.instance['close'] = this.closeFactory();
            componentRef.instance['onClose'] = componentRef.instance['ModalComponent'].onClose;
            componentRef.instance['onOpen'] = componentRef.instance['ModalComponent'].onOpen;
            setTimeout(() => componentRef.instance['ModalComponent'].open());
            return componentRef.instance;
        }
    }
    /**
     * @param {?} modalInstance
     * @return {?}
     */
    close(modalInstance) {
        modalInstance.close();
    }
    /**
     * @return {?}
     */
    closeFactory() {
        /** @type {?} */
        var _self = this;
        return function () {
            this['ModalComponent'].close();
            _self.modalHost.remove();
        };
    }
}
ModalManager.ɵfac = function ModalManager_Factory(t) { return new (t || ModalManager)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver)); };
ModalManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ModalManager, factory: ModalManager.ɵfac, providedIn: "root" });
/** @nocollapse */
ModalManager.ctorParameters = () => [
    { type: ComponentFactoryResolver }
];
/** @nocollapse */ ModalManager.ngInjectableDef = defineInjectable({ factory: function ModalManager_Factory() { return new ModalManager(inject(ComponentFactoryResolver)); }, token: ModalManager, providedIn: "root" });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalManager, [{
        type: Injectable,
        args: [{
                providedIn: "root"
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }]; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ModalComponent {
    /**
     * @param {?} modalManager
     */
    constructor(modalManager) {
        this.modalManager = modalManager;
        this.onOpen = new EventEmitter(false);
        this.onClose = new EventEmitter(false);
        this.isOpened = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.inputSettings = {
            title: this.title,
            size: this.size || "md",
            modalClass: this.modalClass || '',
            hideCloseButton: this.hideCloseButton || false,
            centered: this.centered || false,
            backdrop: this.backdrop || true,
            animation: this.animation || true,
            keyboard: this.keyboard || true,
            closeOnOutsideClick: this.closeOnOutsideClick || true,
            backdropClass: this.backdropClass || "modal-backdrop"
        };
    }
    /**
     * @param {?} config
     * @return {?}
     */
    init(config) {
        this.onOpen.observers = [];
        this.onClose.observers = [];
        this.settings = Object.assign({}, this.modalManager.defaults, this.inputSettings, config);
        this.createBackDrop();
    }
    /**
     * @return {?}
     */
    open() {
        if (this.isOpened)
            return;
        document.body.appendChild(this.backdropElement);
        document.body.classList.add("modal-open");
        this.isOpened = true;
        window.setTimeout(() => {
            this.modalRoot.nativeElement.classList.add('show');
            this.modalRoot.nativeElement.focus();
            this.onOpen.emit();
        }, 100);
    }
    /**
     * @return {?}
     */
    close() {
        if (!this.isOpened)
            return;
        this.modalRoot.nativeElement.classList.remove('show');
        document.body.removeChild(this.backdropElement);
        document.body.className = document.body.className.replace(/modal-open\b/, "");
        window.setTimeout(() => {
            this.isOpened = false;
            this.onClose.emit();
        }, 100);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    preventClosing(event) {
        event.stopPropagation();
    }
    /**
     * @return {?}
     */
    createBackDrop() {
        this.backdropElement = document.createElement("div");
        this.backdropElement.classList.add("fade");
        this.backdropElement.classList.add("show");
        if (this.settings && this.settings.backdrop && this.settings.backdrop == true) {
            this.backdropElement.classList.add(this.settings.backdropClass);
        }
    }
}
ModalComponent.ɵfac = function ModalComponent_Factory(t) { return new (t || ModalComponent)(ɵngcc0.ɵɵdirectiveInject(ModalManager)); };
ModalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalComponent, selectors: [["modal"]], viewQuery: function ModalComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modalRoot = _t.first);
    } }, inputs: { title: "title", size: "size", modalClass: "modalClass", hideCloseButton: "hideCloseButton", centered: "centered", backdrop: "backdrop", animation: "animation", keyboard: "keyboard", closeOnOutsideClick: "closeOnOutsideClick", backdropClass: "backdropClass" }, outputs: { onOpen: "onOpen", onClose: "onClose" }, ngContentSelectors: _c5, decls: 4, vars: 12, consts: [["tabindex", "-1", "role", "dialog", 1, "modal", 3, "ngStyle", "ngClass", "keydown.esc", "click"], ["modalRoot", ""], [3, "ngClass", "click"], ["class", "modal-content", "tabindex", "0", 4, "ngIf"], ["tabindex", "0", 1, "modal-content"], [1, "modal-header"], ["class", "modal-title", 4, "ngIf"], ["type", "button", "class", "close", 3, "click", 4, "ngIf"], [1, "modal-body"], [1, "modal-footer"], [1, "modal-title"], ["type", "button", 1, "close", 3, "click"], ["aria-hidden", "true"]], template: function ModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵlistener("keydown.esc", function ModalComponent_Template_div_keydown_esc_0_listener() { return (ctx.settings == null ? null : ctx.settings.keyboard) ? ctx.close() : 0; })("click", function ModalComponent_Template_div_click_0_listener() { return (ctx.settings == null ? null : ctx.settings.backdrop) !== "static" && (ctx.settings == null ? null : ctx.settings.closeOnOutsideClick) ? ctx.close() : 0; });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵlistener("click", function ModalComponent_Template_div_click_2_listener($event) { return ctx.preventClosing($event); });
        ɵngcc0.ɵɵtemplate(3, ModalComponent_div_3_Template, 9, 2, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(6, _c2, ctx.isOpened ? "block" : "none"))("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c3, ctx.settings == null ? null : ctx.settings.animation));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassMap("modal-dialog modal-" + (ctx.settings == null ? null : ctx.settings.size) + " " + (ctx.settings == null ? null : ctx.settings.modalClass));
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c4, ctx.settings == null ? null : ctx.settings.centered));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isOpened);
    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf], styles: [".modal-dialog-centered[_ngcontent-%COMP%] {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-align: center;\n    align-items: center;\n    min-height: calc(100% - (0.5rem * 2));\n  }\n  @media (min-width: 576px) {\n    .modal-dialog-centered[_ngcontent-%COMP%] {\n      min-height: calc(100% - (1.75rem * 2));\n    }\n  }"] });
/** @nocollapse */
ModalComponent.ctorParameters = () => [
    { type: ModalManager }
];
ModalComponent.propDecorators = {
    title: [{ type: Input }],
    size: [{ type: Input }],
    modalClass: [{ type: Input }],
    hideCloseButton: [{ type: Input }],
    centered: [{ type: Input }],
    backdrop: [{ type: Input }],
    animation: [{ type: Input }],
    keyboard: [{ type: Input }],
    closeOnOutsideClick: [{ type: Input }],
    backdropClass: [{ type: Input }],
    onOpen: [{ type: Output }],
    onClose: [{ type: Output }],
    modalRoot: [{ type: ViewChild, args: ["modalRoot",] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalComponent, [{
        type: Component,
        args: [{
                selector: 'modal',
                template: `<div class="modal" tabindex="-1" role="dialog" #modalRoot (keydown.esc)="settings?.keyboard ? close() : 0" [ngStyle]="{ display: isOpened ? 'block' : 'none' }" [ngClass]="{'fade': settings?.animation}" (click)="settings?.backdrop !== 'static' && settings?.closeOnOutsideClick ? close() : 0">
    <div [class]="'modal-dialog modal-'+ settings?.size + ' ' + settings?.modalClass" (click)="preventClosing($event)" [ngClass]="{'modal-dialog-centered': settings?.centered}">
        <div class="modal-content" tabindex="0" *ngIf="isOpened">
            <div class="modal-header">
                <h4 class="modal-title" *ngIf="settings?.title">{{ settings?.title }}</h4>
                <ng-content select="modal-header"></ng-content>
                <button *ngIf="!settings?.hideCloseButton" type="button" class="close" [attr.aria-label]="settings?.cancelButtonLabel || 'Close'" (click)="close()"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <ng-content select="modal-content"></ng-content>
            </div>
            <div class="modal-footer">
                <ng-content select="modal-footer"></ng-content>
            </div>
        </div>
    </div>
</div>`,
                styles: [`.modal-dialog-centered {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
    align-items: center;
    min-height: calc(100% - (0.5rem * 2));
  }
  @media (min-width: 576px) {
    .modal-dialog-centered {
      min-height: calc(100% - (1.75rem * 2));
    }
  }`]
            }]
    }], function () { return [{ type: ModalManager }]; }, { onOpen: [{
            type: Output
        }], onClose: [{
            type: Output
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }], modalClass: [{
            type: Input
        }], hideCloseButton: [{
            type: Input
        }], centered: [{
            type: Input
        }], backdrop: [{
            type: Input
        }], animation: [{
            type: Input
        }], keyboard: [{
            type: Input
        }], closeOnOutsideClick: [{
            type: Input
        }], backdropClass: [{
            type: Input
        }], modalRoot: [{
            type: ViewChild,
            args: ["modalRoot"]
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ModalFooterComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ModalFooterComponent.ɵfac = function ModalFooterComponent_Factory(t) { return new (t || ModalFooterComponent)(); };
ModalFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalFooterComponent, selectors: [["modal-footer"]], ngContentSelectors: _c6, decls: 1, vars: 0, template: function ModalFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
/** @nocollapse */
ModalFooterComponent.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalFooterComponent, [{
        type: Component,
        args: [{
                selector: 'modal-footer',
                template: `<ng-content></ng-content>`
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ModalContentComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ModalContentComponent.ɵfac = function ModalContentComponent_Factory(t) { return new (t || ModalContentComponent)(); };
ModalContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalContentComponent, selectors: [["modal-content"]], ngContentSelectors: _c6, decls: 1, vars: 0, template: function ModalContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
/** @nocollapse */
ModalContentComponent.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalContentComponent, [{
        type: Component,
        args: [{
                selector: 'modal-content',
                template: `<ng-content></ng-content>`
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ModalHeaderComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ModalHeaderComponent.ɵfac = function ModalHeaderComponent_Factory(t) { return new (t || ModalHeaderComponent)(); };
ModalHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ModalHeaderComponent, selectors: [["modal-header"]], ngContentSelectors: _c6, decls: 1, vars: 0, template: function ModalHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
/** @nocollapse */
ModalHeaderComponent.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'modal-header',
                template: `<ng-content></ng-content>`
            }]
    }], function () { return []; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ModalModule {
}
ModalModule.ɵfac = function ModalModule_Factory(t) { return new (t || ModalModule)(); };
ModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ModalModule });
ModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, { declarations: function () { return [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent],
                exports: [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { ModalManager, ModalComponent, ModalModule, ModalContentComponent, ModalHeaderComponent, ModalFooterComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,