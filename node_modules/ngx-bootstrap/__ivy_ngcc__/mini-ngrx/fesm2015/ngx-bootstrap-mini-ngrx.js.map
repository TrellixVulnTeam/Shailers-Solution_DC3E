{"version":3,"file":"ngx-bootstrap-mini-ngrx.js","sources":["ngx-bootstrap/mini-ngrx/state.class.ts","ngx-bootstrap/mini-ngrx/store.class.ts","ngx-bootstrap/mini-ngrx/public_api.ts"],"names":[],"mappings":";;;;;;;;;;MAQa,SAAa,SAAQ,eAAkB;AACnD;AAAS;AAEJ;AACN;AAA2B;AAE3B,IALE,YACE,aAAgB,EAChB,kBAAsC,EACtC,OAAyB;AACzB,QACA,KAAK,CAAC,aAAa,CAAC,CAAC;AAEzB;AAA0B,cAAhB,cAAc,GAAG,kBAAkB,CAAC,IAAI,CAC5C,SAAS,CAAC,cAAc,CAAC,CAC1B;AACJ;AAA0B,cAAjB,MAAM,GAAG,cAAc,CAAC,IAAI,CAChC,IAAI;AAAO;AACd;AACO;AAEV;AACY,QALD,CAAC,KAAQ,EAAE,MAAc;AACnC,YAAO,IAAI,CAAC,MAAM,EAAE;AACpB,gBAAS,OAAO,KAAK,CAAC;AACtB,aAAQ;AAET,YAAQ,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACrC,SAAM,GACD,aAAa,CACd,CAAC;AAEN,QAAI,MAAM,CAAC,SAAS;AAAO;AACzB;AAEkB;AAAa,QAHZ,CAAC,KAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,CAAC;AACpD,KAAE;AACF;AACC;AAAE;AAAK;AAAmC;AAAsH;AAAK;AAAK;AAAgB;AC1B5L,MAAa,SAAa,SAAQ,UAAa;AAAI;AAAS;AAC/C;AACa;AACjB;AAAS,IAFhB,YACU,WAA6B,EAE7B,QAA4B;AACtC;AACC,IAAC,MAAuB;AACvB,QACA,KAAK,EAAE,CAAC;AAEZ,QARY,gBAAW,GAAX,WAAW,CAAkB;AACzC,QACY,aAAQ,GAAR,QAAQ,CAAoB;AACxC;AACU,QAKN,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACxB,KAAE;AAEH;AAAS;AAAoB;AAC5B;AAAoB;AAAS,IAD5B,MAAM,CAAI,WAA4B;AAAK;AACN;AACtB,cAAP,OAAO,GAAkB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAErE,QAAI,OAAO,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;AAC/C,KAAE;AAEH;AAAS;AAAoB;AACxB;AAAoB;AAAS,IADhC,IAAI,CAAI,QAAwB;AAAK;AAC1B,cAAH,KAAK,GAAG,IAAI,SAAS,CAAI,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AACxE;AACK,QAAF,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE9B,QAAI,OAAO,KAAK,CAAC;AAChB,KAAE;AAEH;AAAS;AACH;AAAoB;AAC1B,IAFE,QAAQ,CAAC,MAAc;AACxB,QAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,KAAE;AAEH;AAAS;AACC;AAAoB;AAE9B,IAHE,IAAI,CAAC,MAAc;AACpB,QAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,KAAE;AAEH;AACG;AAAS;AACG;AACb;AAEI,IAJJ,KAAK,CAAC,GAAQ;AACf,QAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC/B,KAAE;AAEH;AAAS;AAER;AAEG,IAJF,QAAQ;AACT;AAGD,KAFG;AACF,CAAA;AACA;AAAc;AAAS;AAAkB;AAAiB;AAAS,IA5ChE,gCAAqC;AACzC;AAAS;AAAkB;AAC1B;AAAS,IAAN,6BAAoC;AACxC;AAAG;AAAE;AAAK;AACR;AAKsB;AACrB;AAEA;AAAY;ACrBf,qBAIC;AAED;AAAc;AAAsB,IALlC,sBAAa;AACd;AAAgC,IAC/B,yBAAc;AACf;AAEA;AAAE;AAAK;AAAmC;AAIjC;AAAK;AAAE;AAAkC","sourcesContent":["/**\n * @copyright ngrx\n */\nimport { Action, ActionReducer } from './index';\nimport { BehaviorSubject, Observable, queueScheduler } from 'rxjs';\nimport { observeOn, scan } from 'rxjs/operators';\n\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = actionsDispatcher$.pipe(\n      observeOn(queueScheduler)\n    );\n    const state$ = actionInQueue$.pipe(\n      scan((state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    ));\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    /* tslint:disable-next-line: no-any */\n    private _reducer: ActionReducer<any>,\n    /* tslint:disable-next-line: no-any */\n    state$: Observable<any>\n  ) {\n    super();\n\n    /* tslint:disable-next-line: deprecation */\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    /* tslint:disable-next-line: deprecation */\n    const mapped$: Observable<R> = this.source.pipe(map(pathOrMapFn));\n\n    return mapped$.pipe(distinctUntilChanged());\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    /* tslint:disable-next-line: deprecation */\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  /* tslint:disable-next-line: no-any */\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","export interface Action {\n  type: string;\n  /* tslint:disable-next-line: no-any */\n  payload?: any;\n}\n\nexport type ActionReducer<T> = (state: T, action: Action) => T;\n\nexport { MiniState } from './state.class';\nexport { MiniStore } from './store.class';\n"]}