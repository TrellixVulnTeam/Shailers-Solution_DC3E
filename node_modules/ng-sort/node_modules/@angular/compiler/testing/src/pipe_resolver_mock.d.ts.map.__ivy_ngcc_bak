{"version":3,"file":"pipe_resolver_mock.d.ts","sources":["pipe_resolver_mock.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileReflector, PipeResolver } from '@angular/compiler';\nimport { Injector, Pipe, Type } from '@angular/core';\nexport declare class MockPipeResolver extends PipeResolver {\n    private _injector;\n    private _pipes;\n    constructor(_injector: Injector, refector: CompileReflector);\n    private readonly _compiler;\n    private _clearCacheFor(pipe);\n    /**\n     * Overrides the {@link Pipe} for a pipe.\n     */\n    setPipe(type: Type<any>, metadata: Pipe): void;\n    /**\n     * Returns the {@link Pipe} for a pipe:\n     * - Set the {@link Pipe} to the overridden view when it exists or fallback to the\n     * default\n     * `PipeResolver`, see `setPipe`.\n     */\n    resolve(type: Type<any>, throwIfNotFound?: boolean): Pipe;\n}\n"]}