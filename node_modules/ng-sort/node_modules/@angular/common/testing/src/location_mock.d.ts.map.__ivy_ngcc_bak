{"version":3,"file":"location_mock.d.ts","sources":["location_mock.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Location } from '@angular/common';\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @experimental\n */\nexport declare class SpyLocation implements Location {\n    urlChanges: string[];\n    private _history;\n    private _historyIndex;\n    setInitialPath(url: string): void;\n    setBaseHref(url: string): void;\n    path(): string;\n    isCurrentPathEqualTo(path: string, query?: string): boolean;\n    simulateUrlPop(pathname: string): void;\n    simulateHashChange(pathname: string): void;\n    prepareExternalUrl(url: string): string;\n    go(path: string, query?: string): void;\n    replaceState(path: string, query?: string): void;\n    forward(): void;\n    back(): void;\n    subscribe(onNext: (value: any) => void, onThrow?: ((error: any) => void) | null, onReturn?: (() => void) | null): Object;\n    normalize(url: string): string;\n}\n"]}